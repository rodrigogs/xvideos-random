head
  title=videoTitle
  link(href='https://vjs.zencdn.net/7.11.4/video-js.css' rel='stylesheet')
  style.
    body {
      margin: 0;
    }
    .grid-container {
      position: fixed;
      display: grid;
      grid-template-columns: auto auto;
      z-index: 1;
      min-width: 100%;
      min-height: 100%;
    }
    .grid-item {
      background-color: rgba(255, 255, 255, 0);
      border: 1px solid rgba(0, 0, 0, 0.8);
      font-size: 30px;
      text-align: center;
      cursor: pointer;
    }
    .grid-item:hover {
      background-color: rgba(255, 255, 255, 0.5);
      transition: background-color .4s ease-out;
    }
    .grid-item.like:hover {
      background-color: rgba(67, 217, 25, .3);
      transition: background-color .4s ease-out;
    }
    .grid-item.dislike:hover {
      background-color: rgba(215, 35, 35, .3);
      transition: background-color .4s ease-out;
    }
body
  input#video-id(type='hidden' value=videoId)

  div.grid-container
    div.grid-item.like
    div.grid-item.dislike

  video(
    id='player'
    class='video-js'
    controls
    poster=posterImage
    data-setup='{ "fill": true }'
  )
    source(src=videoUrl type='video/mp4')
    p.vjs-no-js To view this video please enable JavaScript, and consider upgrading to a web browser that
    a(href='https://videojs.com/html5-video-support/' target='_blank') supports HTML5 video

  script(src='https://vjs.zencdn.net/7.11.4/video.min.js')
  script.
    const wait = (timeout) => new Promise(resolve => setTimeout(resolve, timeout))
    const playerReady = async (player) => {
      window.player = player
      let playing = false
      do {
        try {
          await player.play()
          playing = true
          setTimeout(() => {
            document.querySelector('div.grid-container').style.display = 'grid'
          }, 30000)
        } catch (err) {
          // eslint-disable-next-line no-console
          console.error(err)
        } finally {
          await wait(1000)
        }
      } while (!playing)
    }
    const player = videojs('#player', {
      preload: 'auto',
      autoplay: true,
    })
    player.on('ready', function () { playerReady(this) })

  script.
    const id = document.querySelector('#video-id').value
    const grid = document.querySelector('div.grid-container')

    grid.style.display = 'none'

    const like = () => {
      fetch(`${window.location.origin}/like`, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ id })
      })
      document.querySelector('div.grid-container').remove()
    }

    const dislike = () => {
      fetch(`${window.location.origin}/dislike`, {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ id })
      })
      document.querySelector('div.grid-container').remove()
    }

    document.querySelector('div.grid-item.like').addEventListener('click', like)
    document.querySelector('div.grid-item.dislike').addEventListener('click', dislike)
